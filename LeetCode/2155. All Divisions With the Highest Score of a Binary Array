//30-01-2022
//https://leetcode.com/contest/weekly-contest-278/problems/all-divisions-with-the-highest-score-of-a-binary-array/

class Solution {
    public List<Integer> maxScoreIndices(int[] nums) {
        
        //int maxUptilNow = 0;
        int[] scoreAtIndex = new int[nums.length+1];
        int Lscore = 0;
        int Rscore = 0;
        for(int i = 0; i < nums.length; i++)
        {
            if(nums[i] == 0)
                Lscore += 1;
            else
                Rscore += 1;
        }
        int sumL = 0;
        int sumR = Rscore;
        scoreAtIndex[0] = Rscore;
        int maxOverall = Rscore;
        for(int i = 0; i < nums.length; i++)
        {
            if(nums[i] == 0)
            {
                sumL+=1;
                
            }
            if(nums[i] == 1)
            {
                sumR -= 1;
            }
            scoreAtIndex[i+1] = sumL + sumR;
            if(scoreAtIndex[i+1] > maxOverall)
                maxOverall = scoreAtIndex[i+1];
        }
        
        List<Integer> list=new ArrayList<Integer>();
        for(int i = 0; i < scoreAtIndex.length; i++)
        {
            if(scoreAtIndex[i] == maxOverall)
                list.add(i);
        }
        return list;
    }
}
