//05-02-2022
//https://leetcode.com/problems/search-insert-position/

class Solution {
    public int binarySearch(int[] nums, int low, int high, int target)
    {
        if (high - low <= 1)
        {
            if(nums[high] != target && nums[low] != target)
                return target > nums[high] ? high + 1 : low + 1; 
            else if(nums[low] == target)
                return low;
            else if(nums[high] == target)
                return high;
            
        }
        int mid = (low + high)/2;
        if(target == nums[mid])
            return mid;
        else if(target < nums[mid])
            return binarySearch(nums, low, mid-1, target);
        else
            return binarySearch(nums, mid, high, target);
    }
    public int searchInsert(int[] nums, int target) {
        int len = nums.length;
        if(len == 1)
            return target == nums[0] ? 0 : (target > nums[0] ? 1 : 0);
        if(target > nums[len-1])
            return len;
        if(target < nums[0])
            return 0;
        else
            return binarySearch(nums, 0, len-1, target);
    }
}
